"use client";

import NavBar from "@/components/Navbar/Navbar";
import { useEffect, useState, useRef } from "react";
import styles from "../styles/home.module.css";
import Footer from "@/components/Footer/Footer";
import ContentTop from "@/components/ContentTop/ContentTop";
import DesigualMap from "@/components/DesigualMap/DesigualMap";
import { useSelector } from "react-redux";
import { RootState } from "@/lib/store";
import Head from "next/head";
import { firaSans } from "@/ui/fonts";

export default function Home() {
  const [preLoading, setPreLoading] = useState(true);
  //const [currentTopic, setCurrentTopic] = useState("initial");
  const ref = useRef<HTMLDivElement>(null);
  const { currentTopic } = useSelector((state: RootState) => state.topic);

  useEffect(() => {
    setTimeout(() => {
      setPreLoading(false);
    }, 4500);
  }, []);

  useEffect(() => {
    if (ref.current) {
      ref.current.scrollIntoView({
        behavior: "smooth",
      });
    }
  }, [currentTopic]);

  if (preLoading) return <div className={styles.preLoaderGif}></div>;

  return (
    <>
      <Head>
        <title>Desigual Lab</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={firaSans.className}>
        {currentTopic === "inequality-map" ? (
          <DesigualMap />
        ) : (
          <div
            className={`${styles.mainContainer} ${
              currentTopic == "initial"
                ? styles.coverTopInitial
                : styles.coverTopFinal
            } ${
              currentTopic == "press"
                ? styles.grayFilter
                : ""
            }`}
            ref={ref}
          >
            <img
              src="/images/logos/Logo_PMF_Ver_Mono_Branco.svg"
              alt="logo pmf"
              className={styles.logoPMF}
            />
            <NavBar />
            <div className={styles.contentContainer}>
              <ContentTop currentTopic={currentTopic} />
              <div className={styles.containerBottom}>
                <div className={styles.containerBottomBox}>
                  <div
                    className={`${styles.contentBottom} ${
                      currentTopic == "initial"
                        ? styles.coverBottomInitial
                        : styles.coverBottomFinal
                    }`}
                  ></div>
                </div>
                <div
                  className={`${styles.contentCircle} ${
                    currentTopic == "initial"
                      ? styles.circleInitial
                      : styles.circleFinal
                  }`}
                ></div>
              </div>
            </div>
          </div>
        )}
        <Footer />
      </main>
    </>
  );
}
